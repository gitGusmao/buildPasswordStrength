{"version":3,"file":"angular-material-extensions-password-strength.mjs","sources":["../../../../projects/angular-material-extensions/password-strength/src/lib/enum/colors.enum.ts","../../../../projects/angular-material-extensions/password-strength/src/lib/enum/criteria.enum.ts","../../../../projects/angular-material-extensions/password-strength/src/lib/component/mat-pass-toggle-visibility/mat-pass-toggle-visibility.component.ts","../../../../projects/angular-material-extensions/password-strength/src/lib/component/mat-pass-toggle-visibility/mat-pass-toggle-visibility.component.html","../../../../projects/angular-material-extensions/password-strength/src/lib/validator/mat-password-strength-validator.ts","../../../../projects/angular-material-extensions/password-strength/src/lib/validator/regexp.class.ts","../../../../projects/angular-material-extensions/password-strength/src/lib/component/mat-password-strength/mat-password-strength.component.ts","../../../../projects/angular-material-extensions/password-strength/src/lib/component/mat-password-strength/mat-password-strength.component.html","../../../../projects/angular-material-extensions/password-strength/src/lib/animations/index.ts","../../../../projects/angular-material-extensions/password-strength/src/lib/component/mat-password-strength-info/mat-password-strength-info.component.html","../../../../projects/angular-material-extensions/password-strength/src/lib/component/mat-password-strength-info/mat-password-strength-info.component.ts","../../../../projects/angular-material-extensions/password-strength/src/lib/mat-password-strength.module.ts","../../../../projects/angular-material-extensions/password-strength/src/public-api.ts","../../../../projects/angular-material-extensions/password-strength/src/angular-material-extensions-password-strength.ts"],"sourcesContent":["export enum Colors {\r\n  primary = 'primary',\r\n  accent = 'accent',\r\n  warn = 'warn'\r\n}\r\n","export enum Criteria {\r\n  at_least_eight_chars = 'minChar',\r\n  at_least_one_lower_case_char = 'lowerCase',\r\n  at_least_one_upper_case_char = 'upperCase',\r\n  at_least_one_digit_char = 'digit',\r\n  at_least_one_special_char = ' specialChar',\r\n  at_custom_chars = 'customChars'\r\n}\r\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\r\n\r\ntype Type = 'text' | 'password' ;\r\n\r\n@Component({\r\n  selector: 'mat-pass-toggle-visibility',\r\n  templateUrl: './mat-pass-toggle-visibility.component.html',\r\n  styleUrls: ['./mat-pass-toggle-visibility.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class MatPassToggleVisibilityComponent {\r\n\r\n  @Input()\r\n  isVisible: boolean;\r\n\r\n  _type: Type = 'text';\r\n\r\n  get type() {\r\n    return this.isVisible ? 'text' : 'password';\r\n  }\r\n\r\n}\r\n","<button (click)=\"isVisible = !isVisible\"\r\n        class=\"mat-icon-button cdk-focused cdk-mouse-focused\"\r\n        mat-icon-button matRipple\r\n        matRippleCentered=\"true\"\r\n        type=\"button\">\r\n  <mat-icon>{{isVisible ? 'visibility' : 'visibility_off' }}</mat-icon>\r\n</button>\r\n\r\n","import {AbstractControl, ValidatorFn} from '@angular/forms';\r\n\r\nexport class MatPasswordStrengthValidator {\r\n\r\n  isUndefinedOrEmpty(control: AbstractControl): any | undefined {\r\n    if (!control || !control.value || control.value.length === 0) {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  validate(criteria: string, regex: RegExp): ValidatorFn {\r\n    const validator = (control: AbstractControl): { [key: string]: any } => {\r\n      this.isUndefinedOrEmpty(control);\r\n      if (!regex.test(control.value)) {\r\n        const failed = {};\r\n        failed[criteria] = {\r\n          actualValue: control.value,\r\n          requiredPattern: regex\r\n        };\r\n        return failed;\r\n      }\r\n      return undefined;\r\n    };\r\n    return validator;\r\n  }\r\n\r\n  confirm(password: string): ValidatorFn {\r\n    const validator = (control: AbstractControl): { [key: string]: any } => {\r\n      this.isUndefinedOrEmpty(control);\r\n      if (control.value !== password) {\r\n        return {\r\n          notConfirmed: {\r\n            password: password,\r\n            passwordConfirmation: control.value\r\n          }\r\n        }\r\n      }\r\n      return undefined;\r\n    };\r\n    return validator;\r\n  }\r\n\r\n}\r\n","export const RegExpValidator = {\r\n  'lowerCase': RegExp(/^(?=.*?[a-z])/),\r\n  'upperCase': RegExp(/^(?=.*?[A-Z])/),\r\n  'digit': RegExp(/^(?=.*?[0-9])/),\r\n  'specialChar': RegExp(/^(?=.*?[\" !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\"])/),\r\n};\r\n","import {\r\n  AfterContentChecked,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR, ValidatorFn, Validators} from '@angular/forms';\r\nimport {Colors, Criteria} from '../../enum';\r\nimport {MatPasswordStrengthValidator} from '../../validator';\r\nimport {RegExpValidator} from '../../validator/regexp.class';\r\nimport {ThemePalette} from '@angular/material/core';\r\n\r\n\r\n@Component({\r\n  selector: 'mat-password-strength',\r\n  exportAs: 'matPasswordStrength',\r\n  templateUrl: './mat-password-strength.component.html',\r\n  styleUrls: ['./mat-password-strength.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => MatPasswordStrengthComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class MatPasswordStrengthComponent implements OnInit, OnChanges, AfterContentChecked, ControlValueAccessor {\r\n\r\n  @Input() pass: string;\r\n  @Input() externalError: boolean;\r\n\r\n  @Input() enableLengthRule = true;\r\n  @Input() enableLowerCaseLetterRule = true;\r\n  @Input() enableUpperCaseLetterRule = true;\r\n  @Input() enableDigitRule = true;\r\n  @Input() enableSpecialCharRule = true;\r\n\r\n  @Input() min = 8;\r\n  @Input() max = 30;\r\n  @Input() customValidator: RegExp;\r\n\r\n  @Input() warnThreshold = 21;\r\n  @Input() accentThreshold = 81;\r\n\r\n  @Output()\r\n  onStrengthChanged: EventEmitter<number> = new EventEmitter();\r\n\r\n  criteriaMap = new Map<Criteria, RegExp>();\r\n\r\n  containAtLeastMinChars: boolean;\r\n  containAtLeastOneLowerCaseLetter: boolean;\r\n  containAtLeastOneUpperCaseLetter: boolean;\r\n  containAtLeastOneDigit: boolean;\r\n  containAtLeastOneSpecialChar: boolean;\r\n  containAtCustomChars: boolean;\r\n\r\n  // TO ACCESS VIA CONTENT CHILD\r\n  passwordFormControl: FormControl = new FormControl();\r\n  passwordConfirmationFormControl: FormControl = new FormControl();\r\n\r\n  validatorsArray: ValidatorFn[] = [];\r\n  Validators: ValidatorFn;\r\n  matPasswordStrengthValidator = new MatPasswordStrengthValidator();\r\n\r\n  private _strength = 0;\r\n\r\n  get strength(): number {\r\n    return this._strength ? this._strength : 0;\r\n  }\r\n\r\n  private _color: ThemePalette;\r\n\r\n  get color(): ThemePalette {\r\n\r\n    if (this._strength < this.warnThreshold) {\r\n      return Colors.warn;\r\n    } else if (this._strength < this.accentThreshold) {\r\n      return Colors.accent;\r\n    } else {\r\n      return Colors.primary;\r\n    }\r\n  }\r\n\r\n  propagateChange = (_: any) => {\r\n  };\r\n\r\n  ngOnInit(): void {\r\n    this.setRulesAndValidators();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if ((changes.externalError && changes.externalError.firstChange) || changes.password.isFirstChange()) {\r\n      return;\r\n    } else if (changes.externalError && changes.externalError.currentValue) {\r\n      this._color = Colors.warn;\r\n      return;\r\n    } else if (changes.password.previousValue === changes.password.currentValue && !changes.password.firstChange) {\r\n      this.calculatePasswordStrength();\r\n    } else {\r\n      this.pass && this.pass.length > 0 ?\r\n        this.calculatePasswordStrength() : this.reset();\r\n    }\r\n  }\r\n\r\n  parseCustomValidatorsRegex(value: string | RegExp = this.customValidator) {\r\n    if (this.customValidator instanceof RegExp) {\r\n      return this.customValidator;\r\n    } else if (typeof this.customValidator === 'string') {\r\n      return RegExp(this.customValidator);\r\n    }\r\n  }\r\n\r\n  setRulesAndValidators(): void {\r\n    this.validatorsArray = [];\r\n    this.criteriaMap = new Map<Criteria, RegExp>();\r\n    this.passwordConfirmationFormControl\r\n      .setValidators(Validators.compose([\r\n        Validators.required, this.matPasswordStrengthValidator.confirm(this.pass)\r\n      ]));\r\n    this.validatorsArray.push(Validators.required);\r\n    if (this.enableLengthRule) {\r\n      this.criteriaMap.set(Criteria.at_least_eight_chars, RegExp(`^.{${this.min},${this.max}}$`));\r\n      this.validatorsArray.push(Validators.minLength(this.min));\r\n      this.validatorsArray.push(Validators.maxLength(this.max));\r\n    }\r\n    if (this.enableLowerCaseLetterRule) {\r\n      this.criteriaMap.set(Criteria.at_least_one_lower_case_char, RegExpValidator.lowerCase);\r\n      this.validatorsArray.push(Validators.pattern(RegExpValidator.lowerCase));\r\n    }\r\n    if (this.enableUpperCaseLetterRule) {\r\n      this.criteriaMap.set(Criteria.at_least_one_upper_case_char, RegExpValidator.upperCase);\r\n      this.validatorsArray.push(Validators.pattern(RegExpValidator.upperCase));\r\n    }\r\n    if (this.enableDigitRule) {\r\n      this.criteriaMap.set(Criteria.at_least_one_digit_char, RegExpValidator.digit);\r\n      this.validatorsArray.push(Validators.pattern(RegExpValidator.digit));\r\n    }\r\n    if (this.enableSpecialCharRule) {\r\n      this.criteriaMap.set(Criteria.at_least_one_special_char, RegExpValidator.specialChar);\r\n      this.validatorsArray.push(Validators.pattern(RegExpValidator.specialChar));\r\n    }\r\n    if (this.customValidator) {\r\n      this.criteriaMap.set(Criteria.at_custom_chars, this.parseCustomValidatorsRegex());\r\n      this.validatorsArray.push(Validators.pattern(this.parseCustomValidatorsRegex()));\r\n    }\r\n\r\n    this.criteriaMap.forEach((value: any, key: string) => {\r\n      this.validatorsArray.push(this.matPasswordStrengthValidator.validate(key, value));\r\n    });\r\n\r\n    this.passwordFormControl.setValidators(Validators.compose([...this.validatorsArray]));\r\n    this.Validators = Validators.compose([...this.validatorsArray]);\r\n\r\n  }\r\n\r\n  calculatePasswordStrength(): void {\r\n    const requirements: Array<boolean> = [];\r\n    const unit = 100 / this.criteriaMap.size;\r\n\r\n    // console.log('this.criteriaMap.size = ', this.criteriaMap.size);\r\n    // console.log('unit = ', unit);\r\n\r\n    requirements.push(\r\n      this.enableLengthRule ? this._containAtLeastMinChars() : false,\r\n      this.enableLowerCaseLetterRule ? this._containAtLeastOneLowerCaseLetter() : false,\r\n      this.enableUpperCaseLetterRule ? this._containAtLeastOneUpperCaseLetter() : false,\r\n      this.enableDigitRule ? this._containAtLeastOneDigit() : false,\r\n      this.enableSpecialCharRule ? this._containAtLeastOneSpecialChar() : false,\r\n      this.customValidator ? this._containCustomChars() : false\r\n    );\r\n\r\n    this._strength = requirements.filter(v => v).length * unit;\r\n    this.propagateChange(this.strength);\r\n    // console.log('length = ', this._strength / unit);\r\n    this.onStrengthChanged.emit(this.strength);\r\n    this.setRulesAndValidators();\r\n  }\r\n\r\n  reset() {\r\n    this._strength = 0;\r\n    this.containAtLeastMinChars =\r\n      this.containAtLeastOneLowerCaseLetter =\r\n        this.containAtLeastOneUpperCaseLetter =\r\n          this.containAtLeastOneDigit =\r\n            this.containAtCustomChars =\r\n              this.containAtLeastOneSpecialChar = false;\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n    if (obj) {\r\n      this._strength = obj;\r\n    }\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.propagateChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    // throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    // throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n  private _containAtLeastMinChars(): boolean {\r\n    this.containAtLeastMinChars = this.pass.length >= this.min;\r\n    return this.containAtLeastMinChars;\r\n  }\r\n\r\n  private _containAtLeastOneLowerCaseLetter(): boolean {\r\n    this.containAtLeastOneLowerCaseLetter =\r\n      this.criteriaMap\r\n        .get(Criteria.at_least_one_lower_case_char)\r\n        .test(this.pass);\r\n    return this.containAtLeastOneLowerCaseLetter;\r\n  }\r\n\r\n  private _containAtLeastOneUpperCaseLetter(): boolean {\r\n    this.containAtLeastOneUpperCaseLetter =\r\n      this.criteriaMap\r\n        .get(Criteria.at_least_one_upper_case_char)\r\n        .test(this.pass);\r\n    return this.containAtLeastOneUpperCaseLetter;\r\n  }\r\n\r\n  private _containAtLeastOneDigit(): boolean {\r\n    this.containAtLeastOneDigit =\r\n      this.criteriaMap\r\n        .get(Criteria.at_least_one_digit_char)\r\n        .test(this.pass);\r\n    return this.containAtLeastOneDigit;\r\n  }\r\n\r\n  private _containAtLeastOneSpecialChar(): boolean {\r\n    this.containAtLeastOneSpecialChar =\r\n      this.criteriaMap\r\n        .get(Criteria.at_least_one_special_char)\r\n        .test(this.pass);\r\n    return this.containAtLeastOneSpecialChar;\r\n  }\r\n\r\n  private _containCustomChars(): boolean {\r\n    this.containAtCustomChars =\r\n      this.criteriaMap\r\n        .get(Criteria.at_custom_chars)\r\n        .test(this.pass);\r\n    return this.containAtCustomChars;\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    if (this.pass) {\r\n      this.calculatePasswordStrength();\r\n    }\r\n  }\r\n}\r\n","<mat-progress-bar [color]=\"color\"\r\n                  [value]=\"strength\"\r\n                  mode=\"determinate\">\r\n</mat-progress-bar>\r\n","import {animate, animation, AnimationReferenceMetadata, keyframes, style} from '@angular/animations';\r\n\r\nexport function flipIn(timing: number, rotateX: number, rotateY: number): AnimationReferenceMetadata {\r\n  const params = {timing: timing, delay: 0, rotateX, rotateY};\r\n\r\n  return animation(\r\n    [\r\n      style({'backface-visibility': 'visible'}),\r\n      animate(\r\n        '{{ timing }}s {{ delay }}s ease-in',\r\n        keyframes([\r\n          style({\r\n            opacity: 0,\r\n            transform:\r\n              'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 90deg)',\r\n            offset: 0,\r\n          }),\r\n          style({\r\n            opacity: 1,\r\n            transform:\r\n              'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -20deg)',\r\n            offset: 0.4,\r\n          }),\r\n          style({\r\n            transform:\r\n              'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 10deg)',\r\n            offset: 0.6,\r\n          }),\r\n          style({\r\n            transform:\r\n              'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -5deg)',\r\n            offset: 0.8,\r\n          }),\r\n          style({\r\n            transform: 'perspective(400px) rotate3d(0, 0, 0, 0)',\r\n            offset: 1,\r\n          }),\r\n        ])\r\n      ),\r\n    ],\r\n    {params}\r\n  );\r\n}\r\n\r\nexport const flipInX = flipIn(1, 1, 0);\r\nexport const flipInY = flipIn(1, 0, 1);\r\n\r\nexport const shake = animation(\r\n  animate(\r\n    '{{ timing }}s {{ delay }}s',\r\n    keyframes([\r\n      style({transform: 'translate3d(0, 0, 0)', offset: 0}),\r\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.1}),\r\n      style({transform: 'translate3d(10px, 0, 0)', offset: 0.2}),\r\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.3}),\r\n      style({transform: 'translate3d(10px, 0, 0)', offset: 0.4}),\r\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.5}),\r\n      style({transform: 'translate3d(10px, 0, 0)', offset: 0.6}),\r\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.7}),\r\n      style({transform: 'translate3d(10px, 0, 0)', offset: 0.8}),\r\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.9}),\r\n      style({transform: 'translate3d(0, 0, 0)', offset: 1}),\r\n    ])\r\n  ),\r\n  {params: {timing: 1, delay: 0}}\r\n);\r\n","<mat-card @list>\r\n  <mat-card-content>\r\n    <div *ngIf=\"passComponent.enableLowerCaseLetterRule\" @items class=\"info-row\">\r\n      <div *ngIf=\"passComponent.containAtLeastOneLowerCaseLetter; then done else error\" @flipY>\r\n      </div>\r\n      <ng-template #done>\r\n        <mat-icon @positiveState color=\"primary\">{{matIconDone}}</mat-icon>\r\n      </ng-template>\r\n      <ng-template #error>\r\n        <mat-icon @negativeState color=\"warn\">{{matIconError}}</mat-icon>\r\n      </ng-template>\r\n      <span>{{lowerCaseCriteriaMsg}}</span>\r\n    </div>\r\n\r\n    <div *ngIf=\"passComponent.enableUpperCaseLetterRule\" @items class=\"info-row\">\r\n      <div *ngIf=\"passComponent.containAtLeastOneUpperCaseLetter; then done else error\">\r\n      </div>\r\n      <ng-template #done>\r\n        <mat-icon @positiveState color=\"primary\">{{matIconDone}}</mat-icon>\r\n      </ng-template>\r\n      <ng-template #error>\r\n        <mat-icon @negativeState color=\"warn\">{{matIconError}}</mat-icon>\r\n      </ng-template>\r\n      <span>{{upperCaseCriteriaMsg}}</span>\r\n    </div>\r\n\r\n    <div *ngIf=\"passComponent.enableDigitRule\" @items class=\"info-row\">\r\n      <div *ngIf=\"passComponent.containAtLeastOneDigit; then done else error\">\r\n      </div>\r\n      <ng-template #done>\r\n        <mat-icon @positiveState color=\"primary\">{{matIconDone}}</mat-icon>\r\n      </ng-template>\r\n      <ng-template #error>\r\n        <mat-icon @negativeState color=\"warn\">{{matIconError}}</mat-icon>\r\n      </ng-template>\r\n      <span>{{digitsCriteriaMsg}}</span>\r\n    </div>\r\n\r\n    <div *ngIf=\"passComponent.enableSpecialCharRule\" @items class=\"info-row\">\r\n      <div *ngIf=\"passComponent.containAtLeastOneSpecialChar; then done else error\">\r\n      </div>\r\n      <ng-template #done>\r\n        <mat-icon @positiveState color=\"primary\">{{matIconDone}}</mat-icon>\r\n      </ng-template>\r\n      <ng-template #error>\r\n        <mat-icon @negativeState color=\"warn\">{{matIconError}}</mat-icon>\r\n      </ng-template>\r\n      <span>{{specialCharsCriteriaMsg}}</span>\r\n    </div>\r\n\r\n    <div *ngIf=\"passComponent.enableLengthRule\" @items class=\"info-row\">\r\n      <div *ngIf=\"passComponent.containAtLeastMinChars; then done else error\">\r\n      </div>\r\n      <ng-template #done>\r\n        <mat-icon @positiveState color=\"primary\">{{matIconDone}}</mat-icon>\r\n      </ng-template>\r\n      <ng-template #error>\r\n        <mat-icon @negativeState color=\"warn\">{{matIconError}}</mat-icon>\r\n      </ng-template>\r\n      <span>{{minCharsCriteriaMsg}}</span>\r\n    </div>\r\n\r\n    <div *ngIf=\"passComponent.customValidator\" @items class=\"info-row\">\r\n      <div *ngIf=\"passComponent.containAtCustomChars; then done else error\">\r\n      </div>\r\n      <ng-template #done>\r\n        <mat-icon @positiveState color=\"primary\">{{matIconDone}}</mat-icon>\r\n      </ng-template>\r\n      <ng-template #error>\r\n        <mat-icon @negativeState color=\"warn\">{{matIconError}}</mat-icon>\r\n      </ng-template>\r\n      <span>{{customCharsCriteriaMsg}}</span>\r\n    </div>\r\n\r\n    <div *ngIf=\"enableScoreInfo\" @items class=\"info-row\">\r\n      <div *ngIf=\"passComponent.strength === 100; then done else error\">\r\n      </div>\r\n      <ng-template #done>\r\n        <mat-icon @positiveState color=\"primary\">{{matIconDone}}</mat-icon>\r\n      </ng-template>\r\n      <ng-template #error>\r\n        <mat-icon @negativeState color=\"warn\">{{matIconError}}</mat-icon>\r\n      </ng-template>\r\n      <span>Password's strength = {{passComponent.strength}} %100</span>\r\n    </div>\r\n\r\n  </mat-card-content>\r\n</mat-card>","import {Component, Input, OnInit} from '@angular/core';\r\nimport {MatPasswordStrengthComponent} from '../mat-password-strength/mat-password-strength.component';\r\nimport {animate, animateChild, keyframes, query, stagger, style, transition, trigger, useAnimation} from '@angular/animations';\r\nimport {shake} from '../../animations/index';\r\n\r\n@Component({\r\n  selector: 'mat-password-strength-info',\r\n  exportAs: 'matPasswordStrengthInfo',\r\n  templateUrl: './mat-password-strength-info.component.html',\r\n  styleUrls: ['./mat-password-strength-info.component.scss'],\r\n  animations: [\r\n    // nice stagger effect when showing existing elements\r\n    trigger('list', [\r\n      transition(':enter', [\r\n        // child animation selector + stagger\r\n        query('@items',\r\n          stagger(300, animateChild())\r\n        )\r\n      ]),\r\n    ]),\r\n    trigger('items', [\r\n      // cubic-bezier for a tiny bouncing feel\r\n      transition(':enter', [\r\n        style({transform: 'scale(0.5)', opacity: 0}),\r\n        animate('1s cubic-bezier(.8,-0.6,0.2,1.5)',\r\n          style({transform: 'scale(1)', opacity: 1}))\r\n      ]),\r\n      transition(':leave', [\r\n        style({transform: 'scale(1)', opacity: 1, height: '*'}),\r\n        animate('1s cubic-bezier(.8,-0.6,0.2,1.5)',\r\n          style({transform: 'scale(0.5)', opacity: 0, height: '0px', margin: '0px'}))\r\n      ]),\r\n    ]),\r\n    trigger('positiveState', [\r\n      transition(':enter', [\r\n        style({'backface-visibility': 'visible'}),\r\n        animate(\r\n          '{{ timing }}s {{ delay }}s ease-in',\r\n          keyframes([\r\n            style({\r\n              opacity: 0,\r\n              transform:\r\n                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 90deg)',\r\n              offset: 0,\r\n            }),\r\n            style({\r\n              opacity: 1,\r\n              transform:\r\n                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -20deg)',\r\n              offset: 0.4,\r\n            }),\r\n            style({\r\n              transform:\r\n                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 10deg)',\r\n              offset: 0.6,\r\n            }),\r\n            style({\r\n              transform:\r\n                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -5deg)',\r\n              offset: 0.8,\r\n            }),\r\n            style({\r\n              transform: 'perspective(400px) rotate3d(0, 0, 0, 0)',\r\n              offset: 1,\r\n            }),\r\n          ])\r\n        ),\r\n      ], {params: {timing: 1, delay: 0, rotateX: 1, rotateY: 0}}),\r\n    ]),\r\n    trigger('negativeState', [\r\n      transition(':enter', useAnimation(shake)),\r\n    ]),\r\n  ],\r\n})\r\nexport class MatPasswordStrengthInfoComponent implements OnInit {\r\n\r\n  @Input()\r\n  passComponent: MatPasswordStrengthComponent;\r\n\r\n  @Input()\r\n  enableScoreInfo = false;\r\n\r\n  @Input()\r\n  lowerCaseCriteriaMsg = 'contains at least one lower character';\r\n\r\n  @Input()\r\n  upperCaseCriteriaMsg = 'contains at least one upper character';\r\n\r\n  @Input()\r\n  digitsCriteriaMsg = 'contains at least one digit character';\r\n\r\n  @Input()\r\n  specialCharsCriteriaMsg = 'contains at least one special character';\r\n\r\n  @Input()\r\n  customCharsCriteriaMsg = 'contains at least one custom character';\r\n\r\n  @Input()\r\n  minCharsCriteriaMsg: string;\r\n\r\n  @Input()\r\n  matIconDone = 'done';\r\n\r\n  @Input()\r\n  matIconError = 'error';\r\n\r\n  ngOnInit(): void {\r\n    if (!this.minCharsCriteriaMsg) {\r\n      this.minCharsCriteriaMsg = `contains at least ${this.passComponent.min} characters`\r\n    }\r\n  }\r\n\r\n}\r\n","import {CommonModule} from '@angular/common';\r\nimport {ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatRippleModule} from '@angular/material/core';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatIconModule} from '@angular/material/icon';\r\n\r\nimport {MatPasswordStrengthComponent} from './component/mat-password-strength/mat-password-strength.component';\r\nimport {MatPasswordStrengthInfoComponent} from './component/mat-password-strength-info/mat-password-strength-info.component';\r\nimport {MatPassToggleVisibilityComponent} from './component/mat-pass-toggle-visibility/mat-pass-toggle-visibility.component';\r\n\r\n\r\n// Export module's public API\r\nexport {MatPasswordStrengthComponent} from './component/mat-password-strength/mat-password-strength.component';\r\nexport {\r\n  MatPasswordStrengthInfoComponent\r\n} from './component/mat-password-strength-info/mat-password-strength-info.component';\r\nexport {MatPassToggleVisibilityComponent} from './component/mat-pass-toggle-visibility/mat-pass-toggle-visibility.component';\r\nexport {MatPasswordStrengthValidator} from './validator/mat-password-strength-validator';\r\n// validator\r\nexport {RegExpValidator} from './validator/regexp.class';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatProgressBarModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatRippleModule\r\n  ],\r\n  exports: [\r\n    MatPasswordStrengthComponent,\r\n    MatPasswordStrengthInfoComponent,\r\n    MatPassToggleVisibilityComponent\r\n  ],\r\n  declarations: [\r\n    MatPasswordStrengthComponent,\r\n    MatPasswordStrengthInfoComponent,\r\n    MatPassToggleVisibilityComponent\r\n  ],\r\n  entryComponents: [MatPassToggleVisibilityComponent]\r\n})\r\nexport class MatPasswordStrengthModule {\r\n  static forRoot(): ModuleWithProviders<MatPasswordStrengthModule> {\r\n    return {\r\n      ngModule: MatPasswordStrengthModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of password-strength\r\n */\r\n\r\nexport * from './lib/enum';\r\nexport * from './lib/component';\r\nexport * from './lib/animations';\r\nexport * from './lib/validator';\r\nexport * from './lib/mat-password-strength.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}
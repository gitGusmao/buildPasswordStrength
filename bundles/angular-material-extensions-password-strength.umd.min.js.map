{"version":3,"sources":["../../projects/angular-material-extensions/password-strength/src/lib/enum/colors.enum.ts","../../projects/angular-material-extensions/password-strength/src/lib/enum/criteria.enum.ts","../projects/angular-material-extensions/password-strength/src/lib/component/mat-pass-toggle-visibility/mat-pass-toggle-visibility.component.ts","../projects/angular-material-extensions/password-strength/src/lib/component/mat-pass-toggle-visibility/mat-pass-toggle-visibility.component.html","../../../../node_modules/tslib/tslib.es6.js","../../projects/angular-material-extensions/password-strength/src/lib/validator/mat-password-strength-validator.ts","../../projects/angular-material-extensions/password-strength/src/lib/validator/regexp.class.ts","../projects/angular-material-extensions/password-strength/src/lib/component/mat-password-strength/mat-password-strength.component.ts","../../projects/angular-material-extensions/password-strength/src/lib/animations/index.ts","../projects/angular-material-extensions/password-strength/src/lib/component/mat-password-strength/mat-password-strength.component.html","../projects/angular-material-extensions/password-strength/src/lib/component/mat-password-strength-info/mat-password-strength-info.component.html","../projects/angular-material-extensions/password-strength/src/lib/component/mat-password-strength-info/mat-password-strength-info.component.ts","../../../projects/angular-material-extensions/password-strength/src/lib/mat-password-strength.module.ts"],"names":["Colors","Criteria","MatPassToggleVisibilityComponent","this","_type","Object","defineProperty","prototype","isVisible","selectors","inputs","decls","vars","consts","template","rf","ctx","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","MatPasswordStrengthValidator","isUndefinedOrEmpty","control","validate","criteria","regex","_this","test","failed","actualValue","requiredPattern","confirm","password","notConfirmed","passwordConfirmation","RegExpValidator","lowerCase","RegExp","upperCase","digit","specialChar","MatPasswordStrengthComponent","enableLengthRule","enableLowerCaseLetterRule","enableUpperCaseLetterRule","enableDigitRule","enableSpecialCharRule","min","max","warnThreshold","accentThreshold","onStrengthChanged","EventEmitter","criteriaMap","Map","passwordFormControl","FormControl","passwordConfirmationFormControl","validatorsArray","matPasswordStrengthValidator","_strength","propagateChange","_","warn","accent","primary","ngOnInit","setRulesAndValidators","ngOnChanges","changes","externalError","firstChange","pass","isFirstChange","currentValue","_color","previousValue","calculatePasswordStrength","reset","parseCustomValidatorsRegex","customValidator","setValidators","Validators","compose","required","set","at_least_eight_chars","minLength","maxLength","at_least_one_lower_case_char","pattern","at_least_one_upper_case_char","at_least_one_digit_char","at_least_one_special_char","at_custom_chars","forEach","key","requirements","unit","size","_containAtLeastMinChars","_containAtLeastOneLowerCaseLetter","_containAtLeastOneUpperCaseLetter","_containAtLeastOneDigit","_containAtLeastOneSpecialChar","_containCustomChars","filter","v","strength","emit","containAtLeastMinChars","containAtLeastOneLowerCaseLetter","containAtLeastOneUpperCaseLetter","containAtLeastOneDigit","containAtCustomChars","containAtLeastOneSpecialChar","writeValue","obj","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","get","ngAfterContentChecked","flipIn","timing","rotateX","rotateY","params","delay","animation","style","backface-visibility","animate","keyframes","opacity","transform","offset","outputs","exportAs","features","i0","ɵɵProvidersFeature","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ɵɵNgOnChangesFeature","i0.ɵɵelement","i0.ɵɵproperty","flipInX","flipInY","shake","i0.ɵɵtemplate","_r8","_r10","_r13","_r15","_r18","_r20","_r23","_r25","_r28","_r30","_r33","_r35","_r38","_r40","i0.ɵɵtextInterpolate1","MatPasswordStrengthInfoComponent","enableScoreInfo","lowerCaseCriteriaMsg","upperCaseCriteriaMsg","digitsCriteriaMsg","specialCharsCriteriaMsg","customCharsCriteriaMsg","matIconDone","matIconError","minCharsCriteriaMsg","passComponent","trigger","transition","query","stagger","animateChild","height","margin","useAnimation","MatPasswordStrengthModule","forRoot","ngModule","providers","imports","CommonModule","MatProgressBarModule","MatCardModule","MatIconModule","MatRippleModule","declarations","exports"],"mappings":"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","sourcesContent":["export enum Colors {\r\n  primary = 'primary',\r\n  accent = 'accent',\r\n  warn = 'warn'\r\n}\r\n","export enum Criteria {\r\n  at_least_eight_chars = 'minChar',\r\n  at_least_one_lower_case_char = 'lowerCase',\r\n  at_least_one_upper_case_char = 'upperCase',\r\n  at_least_one_digit_char = 'digit',\r\n  at_least_one_special_char = ' specialChar',\r\n  at_custom_chars = 'customChars'\r\n}\r\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\r\n\r\ntype Type = 'text' | 'password' ;\r\n\r\n@Component({\r\n  selector: 'mat-pass-toggle-visibility',\r\n  templateUrl: './mat-pass-toggle-visibility.component.html',\r\n  styleUrls: ['./mat-pass-toggle-visibility.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class MatPassToggleVisibilityComponent {\r\n\r\n  @Input()\r\n  isVisible: boolean;\r\n\r\n  _type: Type = 'text';\r\n\r\n  get type() {\r\n    return this.isVisible ? 'text' : 'password';\r\n  }\r\n\r\n}\r\n","<button (click)=\"isVisible = !isVisible\"\r\n        class=\"mat-icon-button cdk-focused cdk-mouse-focused\"\r\n        mat-icon-button matRipple\r\n        matRippleCentered=\"true\"\r\n        type=\"button\">\r\n  <mat-icon>{{isVisible ? 'visibility' : 'visibility_off' }}</mat-icon>\r\n</button>\r\n\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {AbstractControl, ValidatorFn} from '@angular/forms';\r\n\r\nexport class MatPasswordStrengthValidator {\r\n\r\n  isUndefinedOrEmpty(control: AbstractControl): any | undefined {\r\n    if (!control || !control.value || control.value.length === 0) {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  validate(criteria: string, regex: RegExp): ValidatorFn {\r\n    const validator = (control: AbstractControl): { [key: string]: any } => {\r\n      this.isUndefinedOrEmpty(control);\r\n      if (!regex.test(control.value)) {\r\n        const failed = {};\r\n        failed[criteria] = {\r\n          actualValue: control.value,\r\n          requiredPattern: regex\r\n        };\r\n        return failed;\r\n      }\r\n      return undefined;\r\n    };\r\n    return validator;\r\n  }\r\n\r\n  confirm(password: string): ValidatorFn {\r\n    const validator = (control: AbstractControl): { [key: string]: any } => {\r\n      this.isUndefinedOrEmpty(control);\r\n      if (control.value !== password) {\r\n        return {\r\n          notConfirmed: {\r\n            password: password,\r\n            passwordConfirmation: control.value\r\n          }\r\n        }\r\n      }\r\n      return undefined;\r\n    };\r\n    return validator;\r\n  }\r\n\r\n}\r\n","export const RegExpValidator = {\r\n  'lowerCase': RegExp(/^(?=.*?[a-z])/),\r\n  'upperCase': RegExp(/^(?=.*?[A-Z])/),\r\n  'digit': RegExp(/^(?=.*?[0-9])/),\r\n  'specialChar': RegExp(/^(?=.*?[\" !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\"])/),\r\n};\r\n","import {\r\n  AfterContentChecked,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from \"@angular/core\";\r\nimport {\r\n  ControlValueAccessor,\r\n  FormControl,\r\n  NG_VALUE_ACCESSOR,\r\n  ValidatorFn,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { Colors, Criteria } from \"../../enum\";\r\nimport { MatPasswordStrengthValidator } from \"../../validator\";\r\nimport { RegExpValidator } from \"../../validator/regexp.class\";\r\nimport { ThemePalette } from \"@angular/material/core\";\r\n\r\n@Component({\r\n  selector: \"mat-password-strength\",\r\n  exportAs: \"matPasswordStrength\",\r\n  templateUrl: \"./mat-password-strength.component.html\",\r\n  styleUrls: [\"./mat-password-strength.component.scss\"],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => MatPasswordStrengthComponent),\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class MatPasswordStrengthComponent\r\n  implements OnInit, OnChanges, AfterContentChecked, ControlValueAccessor\r\n{\r\n  @Input() pass: string;\r\n  @Input() externalError: boolean;\r\n\r\n  @Input() enableLengthRule = true;\r\n  @Input() enableLowerCaseLetterRule = true;\r\n  @Input() enableUpperCaseLetterRule = true;\r\n  @Input() enableDigitRule = true;\r\n  @Input() enableSpecialCharRule = true;\r\n\r\n  @Input() min = 8;\r\n  @Input() max = 30;\r\n  @Input() customValidator: RegExp;\r\n\r\n  @Input() warnThreshold = 21;\r\n  @Input() accentThreshold = 81;\r\n\r\n  @Output()\r\n  onStrengthChanged: EventEmitter<number> = new EventEmitter();\r\n\r\n  criteriaMap = new Map<Criteria, RegExp>();\r\n\r\n  containAtLeastMinChars: boolean;\r\n  containAtLeastOneLowerCaseLetter: boolean;\r\n  containAtLeastOneUpperCaseLetter: boolean;\r\n  containAtLeastOneDigit: boolean;\r\n  containAtLeastOneSpecialChar: boolean;\r\n  containAtCustomChars: boolean;\r\n\r\n  // TO ACCESS VIA CONTENT CHILD\r\n  passwordFormControl: FormControl = new FormControl();\r\n  passwordConfirmationFormControl: FormControl = new FormControl();\r\n\r\n  validatorsArray: ValidatorFn[] = [];\r\n  Validators: ValidatorFn;\r\n  matPasswordStrengthValidator = new MatPasswordStrengthValidator();\r\n\r\n  private _strength = 0;\r\n\r\n  get strength(): number {\r\n    return this._strength ? this._strength : 0;\r\n  }\r\n\r\n  private _color: ThemePalette;\r\n\r\n  get color(): ThemePalette {\r\n    if (this._strength < this.warnThreshold) {\r\n      return Colors.warn;\r\n    } else if (this._strength < this.accentThreshold) {\r\n      return Colors.accent;\r\n    } else {\r\n      return Colors.primary;\r\n    }\r\n  }\r\n\r\n  propagateChange = (_: any) => {};\r\n\r\n  ngOnInit(): void {\r\n    this.setRulesAndValidators();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (\r\n      (changes.externalError && changes.externalError.firstChange) ||\r\n      changes.pass.isFirstChange()\r\n    ) {\r\n      return;\r\n    } else if (changes.externalError && changes.externalError.currentValue) {\r\n      this._color = Colors.warn;\r\n      return;\r\n    } else if (\r\n      changes.pass.previousValue === changes.pass.currentValue &&\r\n      !changes.pass.firstChange\r\n    ) {\r\n      this.calculatePasswordStrength();\r\n    } else {\r\n      this.pass && this.pass.length > 0\r\n        ? this.calculatePasswordStrength()\r\n        : this.reset();\r\n    }\r\n  }\r\n\r\n  parseCustomValidatorsRegex(value: string | RegExp = this.customValidator) {\r\n    if (this.customValidator instanceof RegExp) {\r\n      return this.customValidator;\r\n    } else if (typeof this.customValidator === \"string\") {\r\n      return RegExp(this.customValidator);\r\n    }\r\n  }\r\n\r\n  setRulesAndValidators(): void {\r\n    this.validatorsArray = [];\r\n    this.criteriaMap = new Map<Criteria, RegExp>();\r\n    this.passwordConfirmationFormControl.setValidators(\r\n      Validators.compose([\r\n        Validators.required,\r\n        this.matPasswordStrengthValidator.confirm(this.pass),\r\n      ])\r\n    );\r\n    this.validatorsArray.push(Validators.required);\r\n    if (this.enableLengthRule) {\r\n      this.criteriaMap.set(\r\n        Criteria.at_least_eight_chars,\r\n        RegExp(`^.{${this.min},${this.max}}$`)\r\n      );\r\n      this.validatorsArray.push(Validators.minLength(this.min));\r\n      this.validatorsArray.push(Validators.maxLength(this.max));\r\n    }\r\n    if (this.enableLowerCaseLetterRule) {\r\n      this.criteriaMap.set(\r\n        Criteria.at_least_one_lower_case_char,\r\n        RegExpValidator.lowerCase\r\n      );\r\n      this.validatorsArray.push(Validators.pattern(RegExpValidator.lowerCase));\r\n    }\r\n    if (this.enableUpperCaseLetterRule) {\r\n      this.criteriaMap.set(\r\n        Criteria.at_least_one_upper_case_char,\r\n        RegExpValidator.upperCase\r\n      );\r\n      this.validatorsArray.push(Validators.pattern(RegExpValidator.upperCase));\r\n    }\r\n    if (this.enableDigitRule) {\r\n      this.criteriaMap.set(\r\n        Criteria.at_least_one_digit_char,\r\n        RegExpValidator.digit\r\n      );\r\n      this.validatorsArray.push(Validators.pattern(RegExpValidator.digit));\r\n    }\r\n    if (this.enableSpecialCharRule) {\r\n      this.criteriaMap.set(\r\n        Criteria.at_least_one_special_char,\r\n        RegExpValidator.specialChar\r\n      );\r\n      this.validatorsArray.push(\r\n        Validators.pattern(RegExpValidator.specialChar)\r\n      );\r\n    }\r\n    if (this.customValidator) {\r\n      this.criteriaMap.set(\r\n        Criteria.at_custom_chars,\r\n        this.parseCustomValidatorsRegex()\r\n      );\r\n      this.validatorsArray.push(\r\n        Validators.pattern(this.parseCustomValidatorsRegex())\r\n      );\r\n    }\r\n\r\n    this.criteriaMap.forEach((value: any, key: string) => {\r\n      this.validatorsArray.push(\r\n        this.matPasswordStrengthValidator.validate(key, value)\r\n      );\r\n    });\r\n\r\n    this.passwordFormControl.setValidators(\r\n      Validators.compose([...this.validatorsArray])\r\n    );\r\n    this.Validators = Validators.compose([...this.validatorsArray]);\r\n  }\r\n\r\n  calculatePasswordStrength(): void {\r\n    const requirements: Array<boolean> = [];\r\n    const unit = 100 / this.criteriaMap.size;\r\n\r\n    // console.log('this.criteriaMap.size = ', this.criteriaMap.size);\r\n    // console.log('unit = ', unit);\r\n\r\n    requirements.push(\r\n      this.enableLengthRule ? this._containAtLeastMinChars() : false,\r\n      this.enableLowerCaseLetterRule\r\n        ? this._containAtLeastOneLowerCaseLetter()\r\n        : false,\r\n      this.enableUpperCaseLetterRule\r\n        ? this._containAtLeastOneUpperCaseLetter()\r\n        : false,\r\n      this.enableDigitRule ? this._containAtLeastOneDigit() : false,\r\n      this.enableSpecialCharRule ? this._containAtLeastOneSpecialChar() : false,\r\n      this.customValidator ? this._containCustomChars() : false\r\n    );\r\n\r\n    this._strength = requirements.filter((v) => v).length * unit;\r\n    this.propagateChange(this.strength);\r\n    // console.log('length = ', this._strength / unit);\r\n    this.onStrengthChanged.emit(this.strength);\r\n    this.setRulesAndValidators();\r\n  }\r\n\r\n  reset() {\r\n    this._strength = 0;\r\n    this.containAtLeastMinChars =\r\n      this.containAtLeastOneLowerCaseLetter =\r\n      this.containAtLeastOneUpperCaseLetter =\r\n      this.containAtLeastOneDigit =\r\n      this.containAtCustomChars =\r\n      this.containAtLeastOneSpecialChar =\r\n        false;\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n    if (obj) {\r\n      this._strength = obj;\r\n    }\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.propagateChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    // throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    // throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n  private _containAtLeastMinChars(): boolean {\r\n    this.containAtLeastMinChars = this.pass.length >= this.min;\r\n    return this.containAtLeastMinChars;\r\n  }\r\n\r\n  private _containAtLeastOneLowerCaseLetter(): boolean {\r\n    this.containAtLeastOneLowerCaseLetter = this.criteriaMap\r\n      .get(Criteria.at_least_one_lower_case_char)\r\n      .test(this.pass);\r\n    return this.containAtLeastOneLowerCaseLetter;\r\n  }\r\n\r\n  private _containAtLeastOneUpperCaseLetter(): boolean {\r\n    this.containAtLeastOneUpperCaseLetter = this.criteriaMap\r\n      .get(Criteria.at_least_one_upper_case_char)\r\n      .test(this.pass);\r\n    return this.containAtLeastOneUpperCaseLetter;\r\n  }\r\n\r\n  private _containAtLeastOneDigit(): boolean {\r\n    this.containAtLeastOneDigit = this.criteriaMap\r\n      .get(Criteria.at_least_one_digit_char)\r\n      .test(this.pass);\r\n    return this.containAtLeastOneDigit;\r\n  }\r\n\r\n  private _containAtLeastOneSpecialChar(): boolean {\r\n    this.containAtLeastOneSpecialChar = this.criteriaMap\r\n      .get(Criteria.at_least_one_special_char)\r\n      .test(this.pass);\r\n    return this.containAtLeastOneSpecialChar;\r\n  }\r\n\r\n  private _containCustomChars(): boolean {\r\n    this.containAtCustomChars = this.criteriaMap\r\n      .get(Criteria.at_custom_chars)\r\n      .test(this.pass);\r\n    return this.containAtCustomChars;\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    if (this.pass) {\r\n      this.calculatePasswordStrength();\r\n    }\r\n  }\r\n}\r\n","import {animate, animation, AnimationReferenceMetadata, keyframes, style} from '@angular/animations';\r\n\r\nexport function flipIn(timing: number, rotateX: number, rotateY: number): AnimationReferenceMetadata {\r\n  const params = {timing: timing, delay: 0, rotateX, rotateY};\r\n\r\n  return animation(\r\n    [\r\n      style({'backface-visibility': 'visible'}),\r\n      animate(\r\n        '{{ timing }}s {{ delay }}s ease-in',\r\n        keyframes([\r\n          style({\r\n            opacity: 0,\r\n            transform:\r\n              'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 90deg)',\r\n            offset: 0,\r\n          }),\r\n          style({\r\n            opacity: 1,\r\n            transform:\r\n              'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -20deg)',\r\n            offset: 0.4,\r\n          }),\r\n          style({\r\n            transform:\r\n              'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 10deg)',\r\n            offset: 0.6,\r\n          }),\r\n          style({\r\n            transform:\r\n              'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -5deg)',\r\n            offset: 0.8,\r\n          }),\r\n          style({\r\n            transform: 'perspective(400px) rotate3d(0, 0, 0, 0)',\r\n            offset: 1,\r\n          }),\r\n        ])\r\n      ),\r\n    ],\r\n    {params}\r\n  );\r\n}\r\n\r\nexport const flipInX = flipIn(1, 1, 0);\r\nexport const flipInY = flipIn(1, 0, 1);\r\n\r\nexport const shake = animation(\r\n  animate(\r\n    '{{ timing }}s {{ delay }}s',\r\n    keyframes([\r\n      style({transform: 'translate3d(0, 0, 0)', offset: 0}),\r\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.1}),\r\n      style({transform: 'translate3d(10px, 0, 0)', offset: 0.2}),\r\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.3}),\r\n      style({transform: 'translate3d(10px, 0, 0)', offset: 0.4}),\r\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.5}),\r\n      style({transform: 'translate3d(10px, 0, 0)', offset: 0.6}),\r\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.7}),\r\n      style({transform: 'translate3d(10px, 0, 0)', offset: 0.8}),\r\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.9}),\r\n      style({transform: 'translate3d(0, 0, 0)', offset: 1}),\r\n    ])\r\n  ),\r\n  {params: {timing: 1, delay: 0}}\r\n);\r\n","<mat-progress-bar [color]=\"color\"\r\n                  [value]=\"strength\"\r\n                  mode=\"determinate\">\r\n</mat-progress-bar>\r\n","<mat-card @list>\r\n  <mat-card-content>\r\n    <div *ngIf=\"passComponent.enableLowerCaseLetterRule\" @items class=\"info-row\">\r\n      <div *ngIf=\"passComponent.containAtLeastOneLowerCaseLetter; then done else error\" @flipY>\r\n      </div>\r\n      <ng-template #done>\r\n        <mat-icon @positiveState color=\"primary\">{{matIconDone}}</mat-icon>\r\n      </ng-template>\r\n      <ng-template #error>\r\n        <mat-icon @negativeState color=\"warn\">{{matIconError}}</mat-icon>\r\n      </ng-template>\r\n      <span>{{lowerCaseCriteriaMsg}}</span>\r\n    </div>\r\n\r\n    <div *ngIf=\"passComponent.enableUpperCaseLetterRule\" @items class=\"info-row\">\r\n      <div *ngIf=\"passComponent.containAtLeastOneUpperCaseLetter; then done else error\">\r\n      </div>\r\n      <ng-template #done>\r\n        <mat-icon @positiveState color=\"primary\">{{matIconDone}}</mat-icon>\r\n      </ng-template>\r\n      <ng-template #error>\r\n        <mat-icon @negativeState color=\"warn\">{{matIconError}}</mat-icon>\r\n      </ng-template>\r\n      <span>{{upperCaseCriteriaMsg}}</span>\r\n    </div>\r\n\r\n    <div *ngIf=\"passComponent.enableDigitRule\" @items class=\"info-row\">\r\n      <div *ngIf=\"passComponent.containAtLeastOneDigit; then done else error\">\r\n      </div>\r\n      <ng-template #done>\r\n        <mat-icon @positiveState color=\"primary\">{{matIconDone}}</mat-icon>\r\n      </ng-template>\r\n      <ng-template #error>\r\n        <mat-icon @negativeState color=\"warn\">{{matIconError}}</mat-icon>\r\n      </ng-template>\r\n      <span>{{digitsCriteriaMsg}}</span>\r\n    </div>\r\n\r\n    <div *ngIf=\"passComponent.enableSpecialCharRule\" @items class=\"info-row\">\r\n      <div *ngIf=\"passComponent.containAtLeastOneSpecialChar; then done else error\">\r\n      </div>\r\n      <ng-template #done>\r\n        <mat-icon @positiveState color=\"primary\">{{matIconDone}}</mat-icon>\r\n      </ng-template>\r\n      <ng-template #error>\r\n        <mat-icon @negativeState color=\"warn\">{{matIconError}}</mat-icon>\r\n      </ng-template>\r\n      <span>{{specialCharsCriteriaMsg}}</span>\r\n    </div>\r\n\r\n    <div *ngIf=\"passComponent.enableLengthRule\" @items class=\"info-row\">\r\n      <div *ngIf=\"passComponent.containAtLeastMinChars; then done else error\">\r\n      </div>\r\n      <ng-template #done>\r\n        <mat-icon @positiveState color=\"primary\">{{matIconDone}}</mat-icon>\r\n      </ng-template>\r\n      <ng-template #error>\r\n        <mat-icon @negativeState color=\"warn\">{{matIconError}}</mat-icon>\r\n      </ng-template>\r\n      <span>{{minCharsCriteriaMsg}}</span>\r\n    </div>\r\n\r\n    <div *ngIf=\"passComponent.customValidator\" @items class=\"info-row\">\r\n      <div *ngIf=\"passComponent.containAtCustomChars; then done else error\">\r\n      </div>\r\n      <ng-template #done>\r\n        <mat-icon @positiveState color=\"primary\">{{matIconDone}}</mat-icon>\r\n      </ng-template>\r\n      <ng-template #error>\r\n        <mat-icon @negativeState color=\"warn\">{{matIconError}}</mat-icon>\r\n      </ng-template>\r\n      <span>{{customCharsCriteriaMsg}}</span>\r\n    </div>\r\n\r\n    <div *ngIf=\"enableScoreInfo\" @items class=\"info-row\">\r\n      <div *ngIf=\"passComponent.strength === 100; then done else error\">\r\n      </div>\r\n      <ng-template #done>\r\n        <mat-icon @positiveState color=\"primary\">{{matIconDone}}</mat-icon>\r\n      </ng-template>\r\n      <ng-template #error>\r\n        <mat-icon @negativeState color=\"warn\">{{matIconError}}</mat-icon>\r\n      </ng-template>\r\n      <span>Password's strength = {{passComponent.strength}} %100</span>\r\n    </div>\r\n\r\n  </mat-card-content>\r\n</mat-card>","import {Component, Input, OnInit} from '@angular/core';\r\nimport {MatPasswordStrengthComponent} from '../mat-password-strength/mat-password-strength.component';\r\nimport {animate, animateChild, keyframes, query, stagger, style, transition, trigger, useAnimation} from '@angular/animations';\r\nimport {shake} from '../../animations/index';\r\n\r\n@Component({\r\n  selector: 'mat-password-strength-info',\r\n  exportAs: 'matPasswordStrengthInfo',\r\n  templateUrl: './mat-password-strength-info.component.html',\r\n  styleUrls: ['./mat-password-strength-info.component.scss'],\r\n  animations: [\r\n    // nice stagger effect when showing existing elements\r\n    trigger('list', [\r\n      transition(':enter', [\r\n        // child animation selector + stagger\r\n        query('@items',\r\n          stagger(300, animateChild())\r\n        )\r\n      ]),\r\n    ]),\r\n    trigger('items', [\r\n      // cubic-bezier for a tiny bouncing feel\r\n      transition(':enter', [\r\n        style({transform: 'scale(0.5)', opacity: 0}),\r\n        animate('1s cubic-bezier(.8,-0.6,0.2,1.5)',\r\n          style({transform: 'scale(1)', opacity: 1}))\r\n      ]),\r\n      transition(':leave', [\r\n        style({transform: 'scale(1)', opacity: 1, height: '*'}),\r\n        animate('1s cubic-bezier(.8,-0.6,0.2,1.5)',\r\n          style({transform: 'scale(0.5)', opacity: 0, height: '0px', margin: '0px'}))\r\n      ]),\r\n    ]),\r\n    trigger('positiveState', [\r\n      transition(':enter', [\r\n        style({'backface-visibility': 'visible'}),\r\n        animate(\r\n          '{{ timing }}s {{ delay }}s ease-in',\r\n          keyframes([\r\n            style({\r\n              opacity: 0,\r\n              transform:\r\n                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 90deg)',\r\n              offset: 0,\r\n            }),\r\n            style({\r\n              opacity: 1,\r\n              transform:\r\n                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -20deg)',\r\n              offset: 0.4,\r\n            }),\r\n            style({\r\n              transform:\r\n                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 10deg)',\r\n              offset: 0.6,\r\n            }),\r\n            style({\r\n              transform:\r\n                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -5deg)',\r\n              offset: 0.8,\r\n            }),\r\n            style({\r\n              transform: 'perspective(400px) rotate3d(0, 0, 0, 0)',\r\n              offset: 1,\r\n            }),\r\n          ])\r\n        ),\r\n      ], {params: {timing: 1, delay: 0, rotateX: 1, rotateY: 0}}),\r\n    ]),\r\n    trigger('negativeState', [\r\n      transition(':enter', useAnimation(shake)),\r\n    ]),\r\n  ],\r\n})\r\nexport class MatPasswordStrengthInfoComponent implements OnInit {\r\n\r\n  @Input()\r\n  passComponent: MatPasswordStrengthComponent;\r\n\r\n  @Input()\r\n  enableScoreInfo = false;\r\n\r\n  @Input()\r\n  lowerCaseCriteriaMsg = 'contains at least one lower character';\r\n\r\n  @Input()\r\n  upperCaseCriteriaMsg = 'contains at least one upper character';\r\n\r\n  @Input()\r\n  digitsCriteriaMsg = 'contains at least one digit character';\r\n\r\n  @Input()\r\n  specialCharsCriteriaMsg = 'contains at least one special character';\r\n\r\n  @Input()\r\n  customCharsCriteriaMsg = 'contains at least one custom character';\r\n\r\n  @Input()\r\n  minCharsCriteriaMsg: string;\r\n\r\n  @Input()\r\n  matIconDone = 'done';\r\n\r\n  @Input()\r\n  matIconError = 'error';\r\n\r\n  ngOnInit(): void {\r\n    if (!this.minCharsCriteriaMsg) {\r\n      this.minCharsCriteriaMsg = `contains at least ${this.passComponent.min} characters`\r\n    }\r\n  }\r\n\r\n}\r\n","import {CommonModule} from '@angular/common';\r\nimport {ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatRippleModule} from '@angular/material/core';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatIconModule} from '@angular/material/icon';\r\n\r\nimport {MatPasswordStrengthComponent} from './component/mat-password-strength/mat-password-strength.component';\r\nimport {MatPasswordStrengthInfoComponent} from './component/mat-password-strength-info/mat-password-strength-info.component';\r\nimport {MatPassToggleVisibilityComponent} from './component/mat-pass-toggle-visibility/mat-pass-toggle-visibility.component';\r\n\r\n\r\n// Export module's public API\r\nexport {MatPasswordStrengthComponent} from './component/mat-password-strength/mat-password-strength.component';\r\nexport {\r\n  MatPasswordStrengthInfoComponent\r\n} from './component/mat-password-strength-info/mat-password-strength-info.component';\r\nexport {MatPassToggleVisibilityComponent} from './component/mat-pass-toggle-visibility/mat-pass-toggle-visibility.component';\r\nexport {MatPasswordStrengthValidator} from './validator/mat-password-strength-validator';\r\n// validator\r\nexport {RegExpValidator} from './validator/regexp.class';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatProgressBarModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatRippleModule\r\n  ],\r\n  exports: [\r\n    MatPasswordStrengthComponent,\r\n    MatPasswordStrengthInfoComponent,\r\n    MatPassToggleVisibilityComponent\r\n  ],\r\n  declarations: [\r\n    MatPasswordStrengthComponent,\r\n    MatPasswordStrengthInfoComponent,\r\n    MatPassToggleVisibilityComponent\r\n  ],\r\n  entryComponents: [MatPassToggleVisibilityComponent]\r\n})\r\nexport class MatPasswordStrengthModule {\r\n  static forRoot(): ModuleWithProviders<MatPasswordStrengthModule> {\r\n    return {\r\n      ngModule: MatPasswordStrengthModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n"]}